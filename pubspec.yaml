name: inspira
description: "A new Flutter project."
# A linha abaixo impede que o pacote seja publicado acidentalmente no pub.dev
# usando o comando `flutter pub publish`. Isso é preferido para pacotes privados.
publish_to: 'none' # Remova esta linha se quiser publicar no pub.dev

# Abaixo estão definidos a versão e o número de build do seu aplicativo.
# Um número de versão é composto por três números separados por pontos, como 1.2.43
# seguido por um número de build opcional separado por um +.
# Tanto a versão quanto o número de build podem ser sobrescritos no comando `flutter build`
# especificando --build-name e --build-number, respectivamente.
# No Android, build-name é usado como versionName e build-number como versionCode.
# Leia mais sobre versionamento no Android em: https://developer.android.com/studio/publish/versioning
# No iOS, build-name é usado como CFBundleShortVersionString e build-number como CFBundleVersion.
# Leia mais sobre versionamento no iOS em:
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# No Windows, build-name é usado como a parte de versão principal (major), secundária (minor) e de correção (patch)
# do produto e da versão do arquivo, enquanto build-number é usado como sufixo da build.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependências especificam outros pacotes que seu pacote precisa para funcionar.
# Para atualizar automaticamente suas dependências para as versões mais recentes
# considere rodar `flutter pub upgrade --major-versions`. Alternativamente,
# as dependências podem ser atualizadas manualmente alterando os números de versão abaixo para
# a versão mais recente disponível no pub.dev. Para ver quais dependências possuem versões mais novas,
# execute `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # A linha abaixo adiciona a fonte Cupertino Icons ao seu aplicativo.
  # Use com a classe CupertinoIcons para ícones no estilo iOS.
  cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter

  # O pacote "flutter_lints" abaixo contém um conjunto de recomendações de lints
  # para incentivar boas práticas de codificação. O conjunto de lints fornecido pelo pacote é
  # ativado no arquivo `analysis_options.yaml` localizado na raiz do seu pacote.
  # Veja esse arquivo para informações sobre como desativar regras específicas de lint
  # e ativar outras adicionais.
  flutter_lints: ^5.0.0

# Para informações sobre a parte genérica do Dart neste arquivo, veja a página:
# https://dart.dev/tools/pub/pubspec

# A seção abaixo é específica para pacotes Flutter.
flutter:

  # A linha abaixo garante que a fonte Material Icons será
  # incluída no seu aplicativo, permitindo o uso dos ícones da
  # classe Material Icons.
  uses-material-design: true

  # Para adicionar arquivos de imagem ao seu aplicativo, adicione uma seção de assets como esta:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # Um asset de imagem pode se referir a uma ou mais variantes específicas de resolução, veja:
  # https://flutter.dev/to/resolution-aware-images

  # Para detalhes sobre como adicionar assets de dependências de pacotes, veja:
  # https://flutter.dev/to/asset-from-package

  # Para adicionar fontes personalizadas ao seu aplicativo, adicione uma seção fonts aqui,
  # dentro desta seção "flutter". Cada entrada nesta lista deve ter uma chave "family"
  # com o nome da família da fonte, e uma chave "fonts" com uma lista
  # contendo o asset e outros descritores da fonte. Por exemplo:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # Para detalhes sobre fontes vindas de pacotes,
  # veja: https://flutter.dev/to/font-from-package

  assets:
    - assets/images/logo_fundo_branco.jpg